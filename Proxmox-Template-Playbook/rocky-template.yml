---
- name: Create ideal Linux Proxmox template for Rocky Linux 9
  hosts: all
  become: true
  tasks:

    # Install updates
    - name: Install updates on Rocky Linux
      dnf:
        name: '*'
        state: latest
        update_cache: true
      tags: always

    # Install required packages
    - name: Install QEMU Guest Agent, Cloud-Init, DNF Automatic, epel-release, and Fail2Ban
      dnf:
        name:
          - qemu-guest-agent
          - cloud-init
          - dnf-automatic
          - epel-release
        state: present
        update_cache: yes
      tags: always

    - name: Enable and start QEMU Guest Agent
      systemd:
        name: qemu-guest-agent
        enabled: yes
        state: stopped
      tags: always

    # Configure DNF Automatic
    - name: Configure dnf-automatic for security updates
      lineinfile:
        path: /etc/dnf/automatic.conf
        regexp: '^upgrade_type'
        line: 'upgrade_type = security'
        state: present
      tags: always

    - name: Enable dnf-automatic timer
      systemd:
        name: dnf-automatic-install.timer
        enabled: yes
        state: started
      tags: always

    # Configure Firewalld to allow SSH only from trusted subnet
    - name: Create a new Firewalld zone for SSH
      command: firewall-cmd --permanent --new-zone=ssh-limited
      ignore_errors: yes

    - name: Allow SSH from trusted subnet
      command: firewall-cmd --permanent --zone=ssh-limited --add-source=10.1.30.0/24

    - name: Allow SSH service in new zone
      command: firewall-cmd --permanent --zone=ssh-limited --add-service=ssh

    - name: Remove SSH service from default zone
      command: firewall-cmd --permanent --remove-service=ssh

    - name: Reload Firewalld
      command: firewall-cmd --reload

    # Configure SSH
    - name: Configure SSH to disable root login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present
      notify: Reload SSH

    - name: Flush handlers to reload SSH immediately
      meta: flush_handlers

    # Configure Fail2Ban
    - name: Install Fail2Ban
      dnf:
        name: fail2ban
        state: present
      tags: always

    - name: Start and enable Fail2Ban service
      systemd:
        name: fail2ban
        enabled: yes
        state: started

    - name: Copy default Fail2Ban configuration
      copy:
        src: /etc/fail2ban/fail2ban.conf
        dest: /etc/fail2ban/fail2ban.local
        remote_src: yes
      tags: f2b

    - name: Copy Fail2Ban configuration to VM
      copy:
        src: ./Configurations/fail2ban-jail.conf  # Adjust this path to where your local jail.local file is stored
        dest: /etc/fail2ban/jail.local
        owner: root
        group: root
        mode: '0644'
      notify: Restart Fail2Ban

    - name: Ensure Fail2Ban is enabled and started
      systemd:
        name: fail2ban
        enabled: yes
        state: started

    - name: Reload Fail2Ban configuration
      command: fail2ban-client reload
      when: ansible_facts['os_family'] == "RedHat"

    - name: Check Fail2Ban status
      command: fail2ban-client status sshd
      register: fail2ban_status
      changed_when: false

    - debug:
        msg: "{{ fail2ban_status.stdout_lines }}"

    # System cleanup
    - name: Remove SSH authorized_keys file
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.ssh/authorized_keys"
        state: absent
      tags: cleanup

    - name: Clear machine-id
      copy:
        content: ""
        dest: /etc/machine-id
        owner: root
        group: root
        mode: '0644'
      tags: cleanup

    # Shutdown system
    - name: Shutdown the system
      command: poweroff
      async: 1
      poll: 0
      tags: cleanup

  handlers:
    - name: Reload SSH
      systemd:
        name: sshd
        state: reloaded
    - name: Restart Fail2Ban
      systemd:
        name: fail2ban
        state: restarted